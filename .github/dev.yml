name: App CI/CD

on:
  push:
    branches: 
      - dev-0.1
      - release
  pull_request:
    branches:
      - dev-0.1
      - release
    
env:
  APP_NAME: "APP_NAME_URL"
  APP_HOST_PORT: 80
  IMAGE_TAG: ${{ github.sha }}

jobs:
  Build_and_publish_image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Registry
        run: echo ${{ secrets.DOCKER_AUTH_PASSWORD }} | docker login ${{ secrets.DOCKER_REPOSITORY_URL }} -u ${{ secrets.DOCKER_AUTH_USER }} --password-stdin
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_REPOSITORY_URL }}/app:${{ env.IMAGE_TAG }}
          deps_list: requirements.txt
          
  Deploy_app:
    needs: Build_and_publish_image
    runs-on: ubuntu-latest
    steps:
    - name: Deploy using ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          if sudo docker container ls -a --quiet --filter name=${{ env.APP_NAME }} ; then sudo docker rm -f ${{ env.APP_NAME }} ; fi
          sudo docker run --name ${{ env.APP_NAME }} -d -p ${{ env.APP_HOST_PORT }}:5000 ${{ secrets.DOCKER_REPOSITORY_URL }}/app:${{ env.IMAGE_TAG }}
          echo ${{ env.APP_NAME }} > /tmp/active-containers.txt
          sudo bash ${{ secrets.VHOST_RENDER_PATH }} ${{ env.APP_NAME }}
